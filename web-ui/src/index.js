'use strict';

// Require index.html so it gets copied to dist
require('../css/index.css');
require('./index.html');
var graphviz = require('viz.js');

var Elm = require('./Main.elm');
var mountNode = document.getElementById('main');

// .embed() can take an optional second argument. This would be an object
// describing the data we need to start a program, i.e. a userID or some token
var app = Elm.Main.embed(mountNode, {/* REPLACE WITH FLAGS */} );

var DOT_RAW = "```dot\\s*\\n([\\s\\S]*?\\n)```";
var DOT_RE = new RegExp(DOT_RAW, 'im')

// Do final rendering of artifacts using javascript libraries
app.ports.renderText.subscribe(function(text) {
    var replace_dot = function(match, dot) {
        try {
            var rendered = graphviz(dot);
            // For some reason it inserts a bunch of html crap,
            // remove it but leave the version number of graphviz
            // TODO: make the start <svg> and grab this (as regex)
            // and insert it:
            //
            //      <!--Generated by graphviz version 2.40.1 (20161225.0304)-->
            var start = rendered.indexOf("Generated by graphviz");
            return "<p><!--" + rendered.slice(start, rendered.length);
        }
        catch (e) {
            return "```\nGRAPHVIZ RENDERING ERROR:\n" + e.message + "```";
        }
    }
    let rendered = text.replace(DOT_RE, replace_dot);

    app.ports.textRendered.send(rendered)
});
