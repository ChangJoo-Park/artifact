[REQ-security]
text = '''
With commands such as `rst fmt` and the server being able
to edit files on someone's local machine, the rst application
**shall** impose checks at all vulnerable places to ensure
that edits will not be made to files that are outside
the cwd-repo that the user is using.
'''

[RSK-security]
partof = "REQ-security"
text = '''
There is a *high chance* of a coding error which allows for editing
outside of the repo directory, which would cause an *avalance risk*
for security.

In essence, it could compromise all files which rst has access to.

Lowest impact:
- user loosing design data in .toml files (i.e. missing text field, etc)

Highest impact:
- user loosing data *outside of the rst repo*
- User's computer becomming compromised with malware installed by
    a mallicious user through rst

There are two commands which this risk applies to:
- `rst fmt` which edits user files to format them
- `rst server` which allows online users to edit user files

Clearly `rst server` exposes the user to the greatest risk as anyone
with access to the ip address + port of rst could access their files
(unless some kind of password authentication is provided), whereas
rst fmt would have to be created by an error in the application itself
(very possible, but less likely).
'''

[SPC-security-gen]
text = '''
In order to prevent mallicious or accidental user data corruption for
operations which edit user data, all operations which edit user
data **shall** meet the following criteria:

- all project files (whether editing or not) shall be subdirectories
    of the cwd repo.
- all edited files **shall** be subdirectories of settings.artifact_paths
- if a file is created, it must be separate from editing it.

In order to accomplish this, a function shall be created which will
check a Project for discrepencies. This function shall be called
before any operation which edits user data is run.

This shall at least help mitigate the risk that the user's entire
filesystem could be compromized (only the design folders can be
compromized)
'''

[SPC-security-pwd]
text = '''
if any editing operation is not part of rst (i.e. the web-ui), it
shall require a valid password to perform any edits.
'''

[TST-security-gen]
partof = "RSK-security"
text = '''
There shall be two tests:
1. attempt (and fail) to load a project that has an artifact_path which is not 
    a subdirectory of that project.
2. attempt (and fail) to edit files which are not part of 
    settings.artifact_paths
'''

[TST-security-pwd]
text = '''
an end-to-end test of the web-ui shall attempt to edit artifacts:
- without supplying a password and fail
- without supplying a valid password and fail
- with supplying a valid password and suceed
'''
