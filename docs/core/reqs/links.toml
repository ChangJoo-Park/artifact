
[REQ-links]
partof = "REQ-purpose-core-linking"

[REQ-links-partof]
text = '''
the "partof" attribute of an artifact **shall** be used to detail
the artifacts that *depend on it*

it **shall** be invalid to have any artifact be "partof" a LOC artifact
'''

[REQ-links-partof-prefix]
text = '''
- All artifacts with the same whole-prefix **shall** automatically be considered partof
the whole-prefix artifact
- If a whole-prefix artifact does not exist, it **shall** automatically be created empty

definition of whole-prefix: set of characters in groups between "-" character
> Example: `foo-bar-baz-1` has whole-prefixes:
>    `foo`, `foo-bar`, `foo-bar-baz` and `foo-bar-baz-1`
'''
extra = '''
Example:
- REQ-foo
- REQ-foo-1
- REQ-foo-1-a
- REQ-foo-baz

Dependencies are:
- REQ-foo-1 and REQ-foo-baz is partof REQ-foo
- REQ-foo-1-a is partof REQ-foo-1
'''

[REQ-links-parts]
text = '''
the **arts** attribute of an artifact shall be used to detail the
artifacts that it *depends on* (opposite of partof)
'''

[REQ-links-loc]
text = '''
An artifact **shall** have a **loc** atribute which specifies the LOC artifact
which implements the artifact and (optionally) the path to find it in source

> LOC-2: {src}/path/to/loc
'''

[REQ-links-loc-invalid]
text = '''
It **shall** be invalid for a LOC artifact to be linked to by more than one artifact.

> note: in other words, an artifact can only have one implementation
'''

