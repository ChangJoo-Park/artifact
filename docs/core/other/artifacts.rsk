[SPC-core-artifact-name-struct]
loc = "{core}/types.rs"
partof = "REQ-core-[artifacts-name, links-prefix]"
text = '''
The artifact name shall be a struct similar to std::path::Path
'''

[TST-core-artifact-name-parent]
loc = "{core}/types.rs"
partof = "SPC-core-artifact-name-struct"
text = "The parent method must be tested"

[SPC-core-artifact-name-check]
loc = "{core}/types.rs"
partof = "REQ-core-artifacts-name"
text = "The name shall be checked to match the requirements"

[TST-core-artifact-name-check]
loc = "{core}/tests/test_load.rs"
partof = "SPC-core-artifact-name-check"

[SPC-core-artifact-struct]
loc = "{core}/types.rs"
partof = "REQ-core-artifacts-attrs"
text = '''
Artifacts will be implemented in code as an Artifact struct with all the relevant
attributes attached to it
'''

[SPC-core-artifact-attrs-loc]
loc = "{core}/types.rs"
partof = "REQ-core-artifacts-attrs-loc"
text = '''
the `loc` attribute **shall** be a simple user given path. Once given,
it will search for the artifact name it is attached to at the path given and
hold the `(line, col)` information provided.

`loc` is what defines the base-completeness of the artifact set
'''

[TST-core-artifact-loc]

[SPC-core-artifact-types]
loc = "{core}/types.rs"
partof = "REQ-core-artifacts-types"
text = '''
Valid artifact types shall be determined through an enum.

Each artifact will not get it's own struct type as they
are all nearly identical
'''

[SPC-core-artifact-types-check]
loc = "{core}/types.rs"
text = '''
All artifacts must be a defined type or error
'''
