
[SPC-core-vars]
refs = ["REQ-core-vars-global-[cwd, repo]"]
text = '''
The following fields **will** have variables applied:
- settings fields:
    - paths: **only** the default globals will be interpreted, see
        REQ-core-vars-globals-[cwd, repo]
- artifact fields:
    - text: useful for documenting paths, links, etc.
    - refs: not recommended for artifact strings, but supported

The following **will not** have variables applied:
- settings fields:
    - disabled: not a string
    - repo_names: not useful for it's purpose
- artifact fields:
    - key fields: you cannot use vars in the key fields (i.e. `[key]`)
        as these are processed before variables are ever processed
        and it would make it more difficult to read your documents.
    - partof: for much the same reason, you cannot use them in partof.
        partof already provides useful ways to abbreviate artifact names,
        having variables as well would only add to the confusion.
'''

[SPC-core-vars-struct]
text = '''
There shall be a struct which holds variables for use
'''

[SPC-core-vars-lib]
partof = "REQ-core-vars-fmt"
text = '''
the rust library [strfmt](https://github.com/vitiral/strfmt)
**will** be used to accomplish the heavy lifting of actually
formatting strings.
'''
[TST-core-vars-lib]
text = '''
The strfmt library already has extensive testing
'''

[SPC-core-vars-resolve]
partof = "SPC-core-vars-struct"
text = '''
variables **shall** be loaded in the following manner:
- default globals will always be loaded on a per-file basis
and their text will be interpreted for the defaults
immediately.
- global variables will be interpreted at a later time,
after all artifacts have been loaded
- global variabes can use eachother in their definition,
as long as the definition isn't recursive
'''

[SPC-core-vars-resolve-default]
text = '''
default variables **shall** use the feature of strfmt that allows
for ignoring missing variables to resolve variables immediately
'''
[TST-core-vars-resolve-default]
partof = "SPC-core-[load-vars, vars-resolve-default]"

[SPC-core-vars-resolve-user]
text = '''
rsk shall be able to handle variables that use other variables resolving
variables repeatedly until they have been completely resolved.
'''
[TST-core-vars-resolve-user]
partof = "SPC-core-[load-vars, vars-resolve-user]"
