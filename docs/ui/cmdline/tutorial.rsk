
[REQ-ui-cmdline-tutorial]
text = '''
There **shall** be a tutorial that helps the user learn about rsk.

The tutorial should be interactive and guide the user first through the basics of rsk
and then through recording the requirements and design specifications of a simple
project.

Key points that should be hit during the tutorial are:
 - how to use `rsk` and the `ls` cmd
 - basics of setting the paths to load docs
 - creating requirements
 - creating specifications
 - creating tests
 - auto-linking of req <- spc <- of similar names
 - manual linking of different names
 - format for linking multiple items
 - debugging when links are invalid
 - marking items as done
 - marking items as tested
 - overview of error messages and error formats
 - final words
'''

[SPC-ui-cmdline-tutorial-intro]
partof = "REQ-ui-cmdline-tutorial"
text = '''
The intro **shall** be just a tutorial.rsk file that the user can read and interact
with via the `rsk ls` command. This will cover teh basics of rsk including an intro to:

 - creating requirements, specs and tests
 - auto-linking of req <- spc <- of similar names
 - manual linking of different names
 - format for linking multiple items

All of these items should be covered again later for reinforcement
'''

[SPC-ui-cmdline-tutorial-project]
partof = "REQ-ui-cmdline-tutorial"
text = '''
The more in-depth tutorial will focus around applying requirements tracking to
a simple python tutorial, located here:
    http://wiki.openhatch.org/Flash_card_challenge

A static html will be stored on the user's system, and they will be taken through
the tutorial through a tutorial.md file.

This part of the tutorial will be started with the `rsk init -t 2` command, with
further stages auto-populated with further numbers.
'''

[SPC-ui-cmdline-tutorial-project-2]
text = '''
This will create the following in the local directory:

.rsk/settings.rsk: set paths=docs
docs/
   purpose.rsk
flash/
    __init__.py

'''
